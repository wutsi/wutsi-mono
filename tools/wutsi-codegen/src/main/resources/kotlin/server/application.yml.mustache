{{#scope}}
server:
  port: 8080
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 512

management:
  endpoint:
    health:
      show-details: always
    info:
      git:
        mode: full
  endpoints:
    web:
      exposure:
        include: "beans,flyway,health,info,scheduledtasks"

spring:
  main:
    lazy-initialization: false
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration

  jackson:
    deserialization:
      FAIL_ON_UNKNOWN_PROPERTIES: false
      ACCEPT_EMPTY_STRING_AS_NULL_OBJECT: true
    mapper:
      ACCEPT_CASE_INSENSITIVE_ENUMS: true
      ACCEPT_CASE_INSENSITIVE_PROPERTIES: true
    default-property-inclusion: non_null
{{#services}}
  {{#database}}

  flyway:
    baseline-on-migrate: true
    clean-disabled: false

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
      dialect: org.hibernate.dialect.PostgreSQLDialect
      naming:
        physical-strategy: com.wutsi.platform.core.util.CustomPhysicalNamingStrategy

  datasource:
    url: "jdbc:postgresql://localhost:5432/{{databaseName}}"
    username: "postgres"
    password: "postgres"
    hikari:
      connection-timeout: 20000 #maximum number of milliseconds that a client will wait for a connection
      idle-timeout: 10000 #maximum idle time for connection
      minimum-idle: 8 #minimum number of idle connections maintained by HikariCP in a connection pool
      minimum-pool-size: 8 #maximum pool size
      maximum-pool-size: 8 #maximum pool size
      max-lifetime: 1000 # maximum lifetime in milliseconds of a connection in the pool after it is closed.
  {{/database}}
  {{#aws_postgres}}

  flyway:
    baseline-on-migrate: true
    clean-disabled: false

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
      dialect: org.hibernate.dialect.PostgreSQLDialect
      naming:
        physical-strategy: com.wutsi.platform.core.util.CustomPhysicalNamingStrategy

  datasource:
    url: "jdbc:postgresql://localhost:5432/{{databaseName}}"
    username: "postgres"
    password: "postgres"
    hikari:
      connection-timeout: 20000 #maximum number of milliseconds that a client will wait for a connection
      idle-timeout: 10000 #maximum idle time for connection
      minimum-idle: 8 #minimum number of idle connections maintained by HikariCP in a connection pool
      minimum-pool-size: 8 #maximum pool size
      maximum-pool-size: 8 #maximum pool size
      max-lifetime: 1000 # maximum lifetime in milliseconds of a connection in the pool after it is closed.
  {{/aws_postgres}}
  {{#aws_mysql}}

  flyway:
    baseline-on-migrate: true
    clean-disabled: false

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
      dialect: org.hibernate.dialect.MySQL5Dialect
      naming:
        physical-strategy: com.wutsi.platform.core.util.CustomPhysicalNamingStrategy

  datasource:
    url: "jdbc:mysql://localhost:3306/{{databaseName}}?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true"
    username: root
    password:
    hikari:
      connection-timeout: 20000 #maximum number of milliseconds that a client will wait for a connection
      idle-timeout: 10000 #maximum idle time for connection
      minimum-idle: 8 #minimum number of idle connections maintained by HikariCP in a connection pool
      minimum-pool-size: 8 #maximum pool size
      maximum-pool-size: 8 #maximum pool size
      max-lifetime: 1000 # maximum lifetime in milliseconds of a connection in the pool after it is closed.
  {{/aws_mysql}}
  {{#messaging}}
  mail:
    default-encoding: UTF-8
    host: localhost
    port: 2525
    username: username
    password: secret
    properties:
      mail:
        debug: true
        smtp:
          from: no-reply@wutsi.com
          auth: true
          starttls:
            enable: true
    test-connection: false
  {{/messaging}}

wutsi:
  client-id: {{name}}
  application:
    name: {{name}}
  platform:
    security:
      type: jwt
      {{#apiKey}}
      api-key: "---- API KEY ---"
      {{/apiKey}}
    cache:
      name: ${wutsi.application.name}
      type: local
    messaging:
      sms:
        type: none
      push:
        type: none
      url-shortener:
        type: none
      whatsapp:
        type: none
    stream:
      name: ${wutsi.application.name}
      type: local
    tracing:
      client-id: ${wutsi.application.name}
      device-id-provider:
        type: header
{{/services}}

logging:
  level:
    root: INFO
    {{basePackage}}: DEBUG
  pattern:
    console: "%d type=%level logger=%class{20} thread=%thread %m%n"
    file: "%d type=%level logger=%class{20} thread=%thread %m%n"

{{/scope}}

