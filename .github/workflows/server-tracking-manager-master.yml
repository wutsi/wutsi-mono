name: tracking-manager-server

on:
    push:
        branches:
            - master
        paths:
            - 'server/tracking-manager-server/**'
            - '.github/workflows/server-tracking-manager-master.yml'

jobs:
    build:

        runs-on: ubuntu-latest

        steps:
            -   uses: actions/checkout@v4
            -   name: JDK
                uses: actions/setup-java@v4
                with:
                    distribution: 'zulu'
                    java-version: 17
            -   name: Build
                env:
                    GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
                run: |
                    mvn -s settings.xml --non-recursive install
                    cd server/tracking-manager-server
                    mvn -Dspring.datasource.username=root -Dspring.datasource.password=root -q -s ../../settings.xml install

            -   name: Upload app bundle
                uses: actions/upload-artifact@v4
                with:
                    name: appbundle
                    path: server/tracking-manager-server/target/*.jar

    deploy-test:
        runs-on: ubuntu-latest
        needs: [ build ]
        steps:
            -   uses: actions/checkout@v4
            -   name: JDK
                uses: actions/setup-java@v4
                with:
                    distribution: 'zulu'
                    java-version: 17
            -   name: Get artifact
                uses: actions/download-artifact@v4
                with:
                    name: appbundle

            -   name: HerokuCLI
                run: |
                    curl https://cli-assets.heroku.com/install.sh | sh
                    heroku plugins:install @heroku-cli/plugin-java

            -   name: Heroku-Deploy-Test
                env:
                    HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY_TEST}}
                    HEROKU_APP: tracking-manager-test
                    CLOUDAMQP_URL: ${{secrets.CLOUDAMQP_URL_TEST}}
                    AMAZON_MQ_HOST: ${{secrets.AMAZON_MQ_HOST_TEST}}
                    AMAZON_MQ_USERNAME: ${{secrets.AMAZON_MQ_USERNAME_TEST}}
                    AMAZON_MQ_PASSWORD: ${{secrets.AMAZON_MQ_PASSWORD_TEST}}
                    AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY_TEST}}
                    AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY_TEST}}
                    LOG4J_SLACK_WEBHOOK_URL: ${{secrets.LOG4J_SLACK_WEBHOOK_URL_TEST}}
                run: |
                    heroku apps | grep ${HEROKU_APP} && echo 'app: ${HEROKU_APP} exists' ||  heroku apps:create ${HEROKU_APP}
                    heroku buildpacks:clear --app ${HEROKU_APP}
                    heroku buildpacks:add heroku/jvm --app ${HEROKU_APP}
                    heroku config:set --app ${HEROKU_APP} APP_PROFILE=test
                    heroku config:set --app ${HEROKU_APP} CLOUDAMQP_URL=${CLOUDAMQP_URL}
                    heroku config:set --app ${HEROKU_APP} AMAZON_MQ_HOST=${AMAZON_MQ_HOST}
                    heroku config:set --app ${HEROKU_APP} AMAZON_MQ_USERNAME=${AMAZON_MQ_USERNAME}
                    heroku config:set --app ${HEROKU_APP} AMAZON_MQ_PASSWORD=${AMAZON_MQ_PASSWORD}
                    heroku config:set --app ${HEROKU_APP} AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
                    heroku config:set --app ${HEROKU_APP} AWS_SECRET_KEY=${AWS_SECRET_KEY}
                    heroku config:set --app ${HEROKU_APP} LOG4J_SLACK_WEBHOOK_URL=${LOG4J_SLACK_WEBHOOK_URL}
                    heroku addons -a ${HEROKU_APP} | grep papertrail && echo 'addon: papertrail exists' ||  heroku addons:create papertrail -a ${HEROKU_APP}
                    heroku addons -a ${HEROKU_APP} | grep memcachier && echo 'addon: memcachier exists' ||  heroku addons:create memcachier -a ${HEROKU_APP}
                    cp server/wutsi-ml-service/system.properties .
                    cp server/tracking-manager-server/Procfile .
                    heroku deploy:jar tracking-manager-server.jar --app ${HEROKU_APP}

            -   name: Health check
                env:
                    HEROKU_APP: tracking-manager-test
                run: |
                    sleep 30
                    curl -sSf https://${HEROKU_APP}.herokuapp.com/actuator/health >> /dev/null

            -   name: Prepare-EB-Deploy
                env:
                    HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY_TEST}}
                    HEROKU_APP: tracking-manager-test
                    CLOUDAMQP_URL: ${{secrets.CLOUDAMQP_URL_TEST}}
                    AMAZON_MQ_HOST: ${{secrets.AMAZON_MQ_HOST_TEST}}
                    AMAZON_MQ_USERNAME: ${{secrets.AMAZON_MQ_USERNAME_TEST}}
                    AMAZON_MQ_PASSWORD: ${{secrets.AMAZON_MQ_PASSWORD_TEST}}
                    AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY_TEST}}
                    AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY_TEST}}
                    LOG4J_SLACK_WEBHOOK_URL: ${{secrets.LOG4J_SLACK_WEBHOOK_URL_TEST}}
                run: |
                    mkdir .ebextensions/
                    cp server/tracking-manager-server/.ebextensions/env.conf .ebextensions/env.conf
                    zip deployment.zip .ebextensions/env.conf tracking-manager-server.jar

            -   name: EB-Deploy
                uses: einaregilsson/beanstalk-deploy@v22
                with:
                    aws_access_key: ${{ secrets.AWS_ACCESS_KEY_TEST }}
                    aws_secret_key: ${{ secrets.AWS_SECRET_KEY_TEST }}
                    application_name: wutsi-tracking-manager
                    environment_name: Wutsi-tracking-manager-env
                    version_label: ${{ github.SHA }}
                    region: us-east-1
                    deployment_package: deployment.zip


    deploy-prod:
        runs-on: ubuntu-latest
        needs: [ deploy-test ]
        steps:
            -   uses: actions/checkout@v4
            -   name: JDK
                uses: actions/setup-java@v4
                with:
                    distribution: 'zulu'
                    java-version: 17

            -   name: Get artifact
                uses: actions/download-artifact@v4
                with:
                    name: appbundle

            -   name: Install Heroku CLI
                run: |
                    curl https://cli-assets.heroku.com/install.sh | sh
                    heroku plugins:install @heroku-cli/plugin-java

            -   name: Heroku-Deploy-Prod
                env:
                    HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY_PROD}}
                    HEROKU_APP: tracking-manager-prod
                    CLOUDAMQP_URL: ${{secrets.CLOUDAMQP_URL_PROD}}
                    AMAZON_MQ_HOST: ${{secrets.AMAZON_MQ_HOST_PROD}}
                    AMAZON_MQ_USERNAME: ${{secrets.AMAZON_MQ_USERNAME_PROD}}
                    AMAZON_MQ_PASSWORD: ${{secrets.AMAZON_MQ_PASSWORD_PROD}}
                    AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY_PROD}}
                    AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY_PROD}}
                    LOG4J_SLACK_WEBHOOK_URL: ${{secrets.LOG4J_SLACK_WEBHOOK_URL_PROD}}
                run: |
                    heroku apps | grep ${HEROKU_APP} && echo 'app: ${HEROKU_APP} exists' ||  heroku apps:create ${HEROKU_APP}
                    heroku buildpacks:clear --app ${HEROKU_APP}
                    heroku buildpacks:add heroku/jvm --app ${HEROKU_APP}
                    heroku config:set --app ${HEROKU_APP} APP_PROFILE=prod
                    heroku config:set --app ${HEROKU_APP} CLOUDAMQP_URL=${CLOUDAMQP_URL}
                    heroku config:set --app ${HEROKU_APP} AMAZON_MQ_HOST=${AMAZON_MQ_HOST}
                    heroku config:set --app ${HEROKU_APP} AMAZON_MQ_USERNAME=${AMAZON_MQ_USERNAME}
                    heroku config:set --app ${HEROKU_APP} AMAZON_MQ_PASSWORD=${AMAZON_MQ_PASSWORD}
                    heroku config:set --app ${HEROKU_APP} AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
                    heroku config:set --app ${HEROKU_APP} AWS_SECRET_KEY=${AWS_SECRET_KEY}
                    heroku config:set --app ${HEROKU_APP} LOG4J_SLACK_WEBHOOK_URL=${LOG4J_SLACK_WEBHOOK_URL}
                    heroku addons -a ${HEROKU_APP} | grep papertrail && echo 'addon: papertrail exists' ||  heroku addons:create papertrail -a ${HEROKU_APP}
                    heroku addons -a ${HEROKU_APP} | grep memcachier && echo 'addon: memcachier exists' ||  heroku addons:create memcachier -a ${HEROKU_APP}
                    cp server/wutsi-ml-service/system.properties .
                    cp server/tracking-manager-server/Procfile .
                    heroku deploy:jar tracking-manager-server.jar --app ${HEROKU_APP}

            -   name: Health check
                env:
                    HEROKU_APP: tracking-manager-prod
                run: |
                    sleep 30
                    curl -sSf https://${HEROKU_APP}.herokuapp.com/actuator/health >> /dev/null

    cleanup:
        runs-on: ubuntu-latest
        needs: [ deploy-test, deploy-prod ]
        if: ${{always()}}
        steps:
            -   uses: geekyeggo/delete-artifact@v5
                with:
                    name: appbundle
