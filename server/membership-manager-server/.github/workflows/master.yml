name: master

on:
  push:
    branches:
      - master
    paths:
      - 'server/membership-manager-server/**'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
      - name: Build
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          mvn -s settings.xml --non-recursive install
          cd server/membership-manager-server
          mvn -Dspring.datasource.username=root -Dspring.datasource.password=root -q -X -s ../../settings.xml install

      - name: Upload app bundle
        uses: actions/upload-artifact@v3
        with:
          name: appbundle
          path: server/membership-manager-server/target/*.jar

  deploy-test:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v3
      - name: JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: appbundle

      - name: HerokuCLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          heroku plugins:install @heroku-cli/plugin-java

      - name: Heroku-Deploy-Test
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY_TEST}}
          HEROKU_APP: membership-manager-test
          CLOUDAMQP_URL: ${{secrets.CLOUDAMQP_URL_TEST}}
          LOG4J_SLACK_WEBHOOK_URL: ${{secrets.LOG4J_SLACK_WEBHOOK_URL_TEST}}
        run: |
          heroku apps | grep ${HEROKU_APP} && echo 'app: ${HEROKU_APP} exists' ||  heroku apps:create ${HEROKU_APP}
          heroku buildpacks:clear --app ${HEROKU_APP}
          heroku buildpacks:add heroku/jvm --app ${HEROKU_APP}
          heroku config:set --app ${HEROKU_APP} APP_PROFILE=test
          heroku config:set --app ${HEROKU_APP} CLOUDAMQP_URL=${CLOUDAMQP_URL}
          heroku config:set --app ${HEROKU_APP} LOG4J_SLACK_WEBHOOK_URL=${LOG4J_SLACK_WEBHOOK_URL}
          heroku addons -a ${HEROKU_APP} | grep papertrail && echo 'addon: papertrail exists' ||  heroku addons:create papertrail -a ${HEROKU_APP}
          cp server/membership-manager-server/Procfile .
          heroku deploy:jar membership-manager-server.jar --app ${HEROKU_APP}

      - name: Health check
        env:
          HEROKU_APP: membership-manager-test
        run: |
          sleep 90
          curl -sSf https://${HEROKU_APP}.herokuapp.com/actuator/health >> /dev/null

      - name: Notification
        uses: rtCamp/action-slack-notify@v2
        if: ${{always()}}
        env:
          SLACK_COLOR: ${{job.status}}
          SLACK_TITLE: membership-manager-test
          SLACK_MESSAGE: Heroku Deployment in TEST
          MSG_MINIMAL: true
          SLACK_WEBHOOK: ${{secrets.LOG4J_SLACK_WEBHOOK_URL_TEST}}



  deploy-prod:
    runs-on: ubuntu-latest
    needs: [ deploy-test ]
    steps:
      - uses: actions/checkout@v3
      - name: JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: appbundle

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          heroku plugins:install @heroku-cli/plugin-java

      - name: Heroku-Deploy-Prod
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY_PROD}}
          HEROKU_APP: membership-manager-prod
          CLOUDAMQP_URL: ${{secrets.CLOUDAMQP_URL_PROD}}
          LOG4J_SLACK_WEBHOOK_URL: ${{secrets.LOG4J_SLACK_WEBHOOK_URL_PROD}}
        run: |
          heroku apps | grep ${HEROKU_APP} && echo 'app: ${HEROKU_APP} exists' ||  heroku apps:create ${HEROKU_APP}
          heroku buildpacks:clear --app ${HEROKU_APP}
          heroku buildpacks:add heroku/jvm --app ${HEROKU_APP}
          heroku config:set --app ${HEROKU_APP} APP_PROFILE=prod
          heroku config:set --app ${HEROKU_APP} CLOUDAMQP_URL=${CLOUDAMQP_URL}
          heroku config:set --app ${HEROKU_APP} LOG4J_SLACK_WEBHOOK_URL=${LOG4J_SLACK_WEBHOOK_URL}
          heroku addons -a ${HEROKU_APP} | grep papertrail && echo 'addon: papertrail exists' ||  heroku addons:create papertrail -a ${HEROKU_APP}
          cp server/membership-manager-server/Procfile .
          heroku deploy:jar membership-manager-server.jar --app ${HEROKU_APP}

      - name: Health check
        env:
          HEROKU_APP: membership-manager-prod
        run: |
          sleep 90
          curl -sSf https://${HEROKU_APP}.herokuapp.com/actuator/health >> /dev/null

      - name: Notification
        uses: rtCamp/action-slack-notify@v2
        if: ${{always()}}
        env:
          SLACK_COLOR: ${{job.status}}
          SLACK_TITLE: membership-manager-prod
          SLACK_MESSAGE: Heroku Deployment in PROD
          MSG_MINIMAL: true
          SLACK_WEBHOOK: ${{secrets.LOG4J_SLACK_WEBHOOK_URL_PROD}}


  cleanup:
    runs-on: ubuntu-latest
    needs: [ deploy-test, deploy-prod ]
    if: ${{always()}}
    steps:
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: appbundle
